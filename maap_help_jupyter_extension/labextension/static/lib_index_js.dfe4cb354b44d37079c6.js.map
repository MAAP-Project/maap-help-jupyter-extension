{"version":3,"file":"lib_index_js.dfe4cb354b44d37079c6.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAC0D;AACY;AACnB;AACF;AACjD;AACuC;AACvC;AAC4B;AAC5B,WAAW,uCAAuC;AAC/B;AACnB,YAAY,wEAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe,EAAE,oEAAe,EAAE,2DAAS;AAC1D;AACA;AACA;AACA;AACA;AACA,8BAA8B,+DAAa,GAAG,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,oCAAoC;AAC1D,YAAY,WAAW;AACvB,yBAAyB,iDAAI,GAAG,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC,KAAK;AACL,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;AC1GzB;AACsH;AAC7B;AACzF,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,0DAA0D,yBAAyB,uBAAuB,0BAA0B,gBAAgB,KAAK,gBAAgB,yBAAyB,aAAa,cAAc,kBAAkB,mBAAmB,gBAAgB,KAAK,WAAW,iFAAiF,YAAY,aAAa,aAAa,WAAW,MAAM,KAAK,YAAY,WAAW,UAAU,UAAU,UAAU,UAAU,yCAAyC,yBAAyB,uBAAuB,0BAA0B,gBAAgB,KAAK,gBAAgB,yBAAyB,aAAa,cAAc,kBAAkB,mBAAmB,gBAAgB,KAAK,uBAAuB;AAC3wB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AACsH;AAC7B;AACW;AACpG,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,qFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;ACTkD;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://@maap-jupyterlab/maap-help-jupyter-extension/./lib/index.js","webpack://@maap-jupyterlab/maap-help-jupyter-extension/./style/base.css","webpack://@maap-jupyterlab/maap-help-jupyter-extension/./style/index.css","webpack://@maap-jupyterlab/maap-help-jupyter-extension/./style/index.css?0140"],"sourcesContent":["/** jupyterlab imports **/\nimport { ILayoutRestorer } from '@jupyterlab/application';\nimport { ICommandPalette, WidgetTracker } from '@jupyterlab/apputils';\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\n/** phosphor imports **/\nimport { Menu } from '@lumino/widgets';\n/** internal imports **/\nimport '../style/index.css';\n//import { setResultsLimit, displaySearchParams } from './popups'\nimport \"./globals\";\nconsole.log(PageConfig.getBaseUrl());\n///////////////////////////////////////////////////////////////\n//\n// Earthdata Search Client extension\n//\n///////////////////////////////////////////////////////////////\nconst extension = {\n    id: 'maap_help',\n    autoStart: true,\n    requires: [ICommandPalette, ILayoutRestorer, IMainMenu],\n    activate: activate\n};\nfunction activate(app, palette, restorer, mainMenu) {\n    //let widget: IFrameWidget;\n    const namespace = 'tracker-iframe';\n    let instanceTracker = new WidgetTracker({ namespace });\n    //\n    // Listen for messages being sent by the iframe - parse the url and set as parameters for search\n    //\n    window.addEventListener(\"message\", (event) => {\n        // if the message sent is the edsc url\n        if (typeof event.data === \"string\") {\n            //globals.edscUrl = event.data;\n            console.log(\"graceal- event data\" + event.data);\n            //const queryString = '?' + event.data.split('?')[1];\n            // console.log(\"Granule\", globals.granuleQuery);\n            // console.log(\"Collection\", globals.collectionQuery);\n        }\n    });\n    /******** Set commands for command palette and main menu *********/\n    // Add an application command to open ESDC\n    const test1 = 'iframe:open';\n    app.commands.addCommand(test1, {\n        label: 'Test1',\n        isEnabled: () => true,\n        execute: args => {\n            console.log(\"in execute of test1\");\n            // Only allow user to have one EDSC window\n            /*if (widget == undefined) {\n                widget = new IFrameWidget(edsc_server);\n                app.shell.add(widget, 'main');\n                app.shell.activateById(widget.id);\n            } else {\n                // if user already has EDSC, just switch to tab\n                app.shell.add(widget, 'main');\n                app.shell.activateById(widget.id);\n            }\n      \n            if (!instanceTracker.has(widget)) {\n              // Track the state of the widget for later restoration\n              instanceTracker.add(widget);\n            }*/\n        }\n    });\n    palette.addItem({ command: test1, category: 'Search' });\n    //graceal- try to change search category\n    const test2 = 'search:displayParams';\n    app.commands.addCommand(test2, {\n        label: 'Test2',\n        isEnabled: () => true,\n        execute: args => {\n            console.log(\"in execute of test2\");\n        }\n    });\n    palette.addItem({ command: test2, category: 'Search' });\n    const test3 = 'search:pasteCollectionQuery';\n    app.commands.addCommand(test3, {\n        label: 'Test 3',\n        isEnabled: () => true,\n        execute: args => {\n            console.log(\"in execute of test3\");\n        }\n    });\n    palette.addItem({ command: test3, category: 'Search' });\n    const { commands } = app;\n    let searchMenu = new Menu({ commands });\n    searchMenu.title.label = 'Help';\n    [\n        test1,\n        test2,\n        test3\n    ].forEach(command => {\n        searchMenu.addItem({ command });\n    });\n    mainMenu.addMenu(searchMenu, { rank: 100 });\n    // Track and restore the widget state\n    restorer.restore(instanceTracker, {\n        command: test1,\n        name: () => namespace\n    });\n    //graceal- to do- do I need this?\n    console.log('JupyterLab extension maap_help is activated!');\n    return instanceTracker;\n}\n;\nexport default extension;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".iframe-widget {\\n    position: relative;\\n    overflow: hidden;\\n    padding-top: 56.25%;\\n    height: 0;\\n  }\\n  \\n  iframe {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    border: 0;\\n  }\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;IACnB,SAAS;EACX;;EAEA;IACE,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,SAAS;EACX\",\"sourcesContent\":[\".iframe-widget {\\n    position: relative;\\n    overflow: hidden;\\n    padding-top: 56.25%;\\n    height: 0;\\n  }\\n  \\n  iframe {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    border: 0;\\n  }\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}